   day-3 , prog-3
   Find Password:
   int arr[5]={input1,input2,input3,input4,input5};
    int *hash=(int*)malloc(sizeof(int)*10),n,unsum=0,stsum=0;
    for(int i=0;i<5;i++)
    {
        int rem,count=0,flag=0,de=0;
        n=arr[i];
        for(int k=0;k<10;k++)
        {
            hash[k]=0;
        }
        while(n!=0)
        {
            rem=n%10;
            hash[rem]++;
            n=n/10;
        }
        for(int j=0;j<10;j++)
        {
            if(hash[j]>0&&flag==0)
            {
                count=hash[j];
                flag=1;
            }
            else if(count!=hash[j]&&flag==1&&hash[j]>0)
            {
                de++;
            }
        }
        if(de>0)
        {
            unsum=unsum+arr[i];
        }
        else
        {
            stsum=stsum+arr[i];
        }
    }
    return stsum-unsum;
    
}
day 3
program 4
calculate sum of non prime index value
int calculatesum(int input1[],int input2)
   int size=input2,sum=input1[0],cnt;
    for(int i=1;i<size;i++)
    {
         cnt=0;
        for(int j=1;j<=i;j++)
        {
            if(i%j==0)
            {
                cnt++;
            }
        }
        if(cnt!=2)
        {
            sum=sum+input1[i];
        }
    }
    return sum;
    
}
string question -just part part the string(substring):


#include <stdio.h>
#include<stdlib.h>
char* substring(char* str,int m,int n)
{
    int cnt=0;
    char *sub=(char*)malloc(sizeof(char)*50);
    for(int i=m;i<n&&str[i]!='\0';i++)
    {
        sub[cnt++]=str[i];
    }
    sub[cnt]='\0';
    return sub;
}
int main(void) {
    int cnt=0,j=0,count=0,i;
    char str[]="hello world this is a program";
    for(int i=0;str[i]!='\0';i++)
    {
        if(str[i]==' ')
        {
            cnt++;
        }
    }
    char *strarr[cnt+1];
    for(i=0;str[i]!='\0';i++)
    {
        if(str[i]==' '||str[i]=='\0')
        {
            strarr[count++]=substring(str,j,i);
            j=i+1;
        }
    }
    if(str[i]=='\0')
    {
        strarr[count++]=substring(str,j,i);
    }
for(int i=0;i<cnt+1;i++)
{
    printf("%s\n",strarr[i]);
}

	return 0;
}











#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<math.h>
int checkpali(int arr[],int size)
{
    int sum=0,check,rem,sum2=0,count=0;
    for(int i=0;i<size;i++)
    {
        sum=sum+arr[i]*pow(10,size-i-1);

    }
    check=sum;
    while(check!=0)
    {
        rem=check%10;
        sum2=sum2+rem*pow(10,size-count-1);
        count++;
        check=check/10;
    }
    if(sum==sum2)
    {
        return 1;
    }
    else
    {
        return 2;
    }
}
 int n=input1,c=0,n1=input1,j,cnt=0,no;
    int *arr=(int*)malloc(sizeof(int)*100);
    int *check=(int*)malloc(sizeof(int)*100);
    while(n!=0)
    {
        c++;
        n=n/10;

    }
    for(int i=0;i<c;i++)
    {
        arr[c-(i+1)]=n1%10;
        n1=n1/10;
    }
    int a=checkpali(arr,c);
    if(a==1)
    {
        return -1;
    }
    else
    {
   for(int i=0;i<c;i++)
   {
       no=0;
       for(j=0;j<i;j++)
       {
           check[cnt++]=arr[j];
       }
       for(j=i+1;j<c&&j!=i;j++)
       {
           check[cnt++]=arr[j];
       }
       no=checkpali(check,c-1);
        if(no==1)
        {
            return arr[i];
        }
        else if(no==2)
        {
            continue;
        }
   }
    }
   
    
}




 int *arr=(int*)malloc(sizeof(int)*10),sum;
    int *no=(int*)malloc(sizeof(int)*10),cnt=0;
    for(int i=0;input1[i]!='\0';i++)
    {
        arr[i]=input1[i]-'0';
     }
     int j;
     for(int i=0;i<10;i++)
     {
         sum=0;
         if(arr[i]%2!=0)
         {
             sum=arr[i];
             for(j=i+1;sum%2!=0;j++)
             {
                 sum=sum+arr[j];
             }
             no[cnt++]=sum;
            i=j;
         }
         else if(arr[i]%2==0)
         {
             sum=arr[i];
             for(j=i+1;sum%2==0;j++)
             {
                 sum=sum+arr[j];
             }
             no[cnt++]=sum;
             i=j;
            
         }
     }
     int num=0;
     for(int i=0;i<cnt;i++)
     {
         int x=no[i];
         while(x>0)
         {
             num*=10;
             num+=x%10;
             x/=10;
         }
     }
     return num;
     
     
}




#include <stdio.h>
#include<stdlib.h>

int main(void) {
    char input1[]="9900114279";
	int *arr=(int*)malloc(sizeof(int)*10),sum;
    int *no=(int*)malloc(sizeof(int)*10),cnt=0;
    int *ar=(int*malloc(sizeof(int)*10);
    for(int i=0;input1[i]!='\0';i++)
    {
        arr[i]=input1[i]-'0';
     }
   
     int j;
     for(int i=0;i<10;i++)
     {
         //sum=0;
         //printf("\n*%d\n",i);
       
         if(arr[i]%2==0)
         {
            // printf("even-%d",arr[i]);
             sum=arr[i];
             if(i<9)
             {
             for(j=i+1;sum%2==0;j++)
             {
                 sum=sum+arr[j];
             }
             
            // printf("%d-%deven\n",cnt,sum);
             i=j-1;
             }
             //("even-%d",i);
             no[cnt++]=sum;
            
         }
         else if(arr[i]%2!=0)
         {
             sum=arr[i];
             if(i<9)
             {
             for(j=i+1;sum%2!=0;j++)
             {
                 sum=sum+arr[j];
             }
             
             //printf("%d-%dodd\n",cnt,sum);
             
            i=j-1;
             }
          //  printf("odd-%d",i);
          no[cnt++]=sum;
         }
     }
   for(int i=0;i<cnt;i++)
   {
      printf("%d\n",no[i]);
   }

     

	return 0;
}



#include<stdio.h>
#include<stdlib.h>
#include<string.h>
char* substr(char* str,int m,int n)
{
    char *new=(char*)malloc(sizeof(char));
    int cnt=0;
    for(int i=m;i<n&&str[i]!='\ 0';i++)
    {
        new[cnt++]=str[i];
    }
    new[cnt]='\0';
    return new;
}
char* rev(char* str)
{
    char *revarr=(char*)malloc(sizeof(char)*50);
    int i,cnt=0;
    for(i=0;str[i]!='\0';i++)
    {}
    for(int j=i-1;j>=0;j--)
    {
        revarr[cnt++]=str[j];
    }
    revarr[cnt]='\0';
    return revarr;
}
int main()
{
    char str[]="Today is a Nice Day";
    int scnt=0,cnt=0,j=0;
    int no=41,no1,no2;
    for(int i=0;str[i]!='\0';i++)
    {
        if(str[i]==' ')
        {
            scnt++;
        }
    }
    char *starr[scnt+1];
    int i;
    for(i=0;str[i]!='\0';i++)
    {
        if(str[i]==' ')
        {
            starr[cnt++]=substr(str,j,i);
            j=i+1;
        }
    }
    starr[cnt]=substr(str,j,i+1);
    no2=no%10;
    no/=10;
    no1=no%10;
    char *string1=starr[no1-1];
    char *string2=starr[no2-1];
    char *string_1;
    char *string_2;
    if(strlen(string1)%2==0)
    {
        int c=strlen(string1)/2;
        string_1=strcat(substr(string1,c,strlen(string1)),rev(substr(string1,0,c)));
    }
    else if(strlen(string1)%2!=0)
    {
        int c=strlen(string1)/2;
        string_1=strcat(substr(string1,c,strlen(string1)),rev(substr(string1,0,c+1)));
        
    }
       if(strlen(string2)%2==0)
    {
        int c=strlen(string2)/2;
        string_2=strcat(substr(string2,c,strlen(string2)),rev(substr(string2,0,c)));
    }
    else if(strlen(string2)%2!=0)
    {
        int c=strlen(string2)/2;
        string_2=strcat(substr(string2,c,strlen(string2)),rev(substr(string2,0,c+1)));
        
    }
   char *output=malloc(sizeof(char)*50);
    int c1=strlen(string_1);
    int c2=strlen(string_2);
    int length=c1+c2+1,count;
    for(count=0;count<c1;count++)
    {
        output[count]=string_1[count];
    }
    output[count]=' ';
    int k=0;
    for(count=c1+1;count<length;count++)
    {
        output[count]=string_2[k++];
    }
    output[count++]='\0';
    printf("%s",output);
    
    return 0;
    

}
